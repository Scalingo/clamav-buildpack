#!/usr/bin/env bash

set -e

if [ -n "${BUILDPACK_DEBUG}" ]
then
	set -x
fi

build_dir="${1}"
cache_dir="${2}"
env_dir="${3}"

base_dir="$( cd -P "$( dirname "$0" )" && pwd )"
buildpack_dir="$( readlink -f "${base_dir}/.." )"

source "${buildpack_dir}/DEFAULT_VERSIONS"


version="${CLAMAV_VERSION:-"${CLAMAV_DEFAULT_VERSION}"}"

package="clamav-${version}.linux.x86_64.deb"
url="https://www.clamav.net/downloads/production/${package}"

cache_file="${cache_dir}/clamav-${version}.deb"

curl --silent --fail --retry 3 \
	--location "${url}" \
	--output "${cache_file}"

# Extract deb file:
extract_dir="$( mktemp --directory --tmpdir="/tmp" "deb_XXXXXX" )"
dpkg-deb --extract "${cache_file}" "${extract_dir}"

# Copy files to clamav directory:
dst_dir="${build_dir}/clamav"
mkdir --parents "${dst_dir}"

for d in "bin" "include" "lib" "sbin"; do
	mv "${extract_dir}/usr/local/${d}" "${dst_dir}"
done

PATH="${PATH}:${dst_dir}/bin:${dst_dir}/sbin"
export PATH

LD_LIBRARY_PATH="${LD_LIBRARY_PATH}${dst_dir}/lib"
export LD_LIBRARY_PATH

# Build some variables, make sure we have nice default values.
#
# We also pass variables to the templates. For these, the path to the files
# must be prefixed with /app.
# Also, we use environment vars to pass these variables to the templates.
#
# For prod (environment var below), we have to replace $build_dir with /app.

# Where freshclam's configuration file is:
freshclam_config_file="${dst_dir}/conf/freshclam.conf"
export FRESHCLAM_CONFIG_FILE="${freshclam_config_file/${build_dir}/\/app}"

# Where clamd's configuration file is:
clamd_config_file="${dst_dir}/conf/clamd.conf"
export CLAMD_CONFIG_FILE="${clamd_config_file/${build_dir}/\/app}"

# Where clamd's database is:
clamd_db_dir="${dst_dir}/data"
export CLAMD_DATABASE_DIR="${clamd_db_dir/${build_dir}/\/app}"

# Where clamd's local socket is:
clamd_local_socket="${dst_dir}/run/clamd.sock"
export CLAMD_LOCAL_SOCKET="${clamd_local_socket/${build_dir}/\/app}"

# Where clamd downloads its update from:
clamd_database_mirror="${CLAMD_DATABASE_MIRROR:-database.clamav.net}"
export CLAMD_DATABASE_MIRROR="${clamd_database_mirror}"


mkdir --parents "$( dirname "${freshclam_config_file}" )"
mkdir --parents "$( dirname "${clamd_config_file}" )"
mkdir --parents "$( dirname "${clamd_db_dir}" )"
mkdir --parents "$( dirname "${clamd_local_socket}" )"


# Build freshclam configuration file:
erb "${buildpack_dir}/files/freshclam.conf.erb" \
	> "${freshclam_config_file}"

# Build clamd configuration file:
erb "${buildpack_dir}/files/clamd.conf.erb" \
	> "${clamd_config_file}"


# Refresh the virus database
# Put it in cache for future deployments
# The source is specified in the conf file
freshclam \
	--config-file="${freshclam_config_file}" \
	--datadir="${cache_dir}/clamav-data" 2>/dev/null

# Replace the old virus database:
cp --archive --force "${cache_dir}/clamav-data/." "${clamd_db_dir}/"

# Copy profile.d scripts:
mkdir --parents "${build_dir}/.profile.d"

find "${buildpack_dir}/files/profile.d" -type f -name "*.sh" \
	-exec cp --target-directory="${build_dir}/.profile.d/" {} +

# Cleanup
rm -rf "${extract_dir}"
